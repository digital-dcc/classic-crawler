---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";
import { HeaderBar } from "../components/header-bar";

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session").value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect("/dashboard");
  }
}
---

<Layout title="Sign in">
	<HeaderBar />
	<section class="main">
		<h1>Sign in</h1>
		<div class="register-link">
			<p>New here? <a href="/register">Create an account</a></p>
		</div>
		<div class="signin-form mb-10">
			<form action="/api/auth/signin" method="post">
				<label for="email" for="email">Email</label>
				<input type="email" name="email" id="email" />
				<label for="password">Password</label>
				<input type="password" name="password" id="password" />
				<button type="submit">Login</button>
			</form>
		</div>
		<div class="mb-10">
		Or
		</div>
		<div class="google-signin">
			<button id="google">Sign in with Google</button>
		</div>
	</section>
</Layout>

<style>
	.main {
		width: 1140px;
		margin: 0 auto;
	}
	.register-link {}
	.signin-form input {
		border-radius: 5px;
		border: 1px #ccc solid;
		margin: 0;
		padding: 10px;
	}
	.mb-10 {
		margin-bottom: 10px;
	}
	.google-signin button, .signin-form button {
		margin: 0;
		padding: 10px 20px;
		border-radius: 5px;
		border: 1px #ccc solid;
		background-color: #f3f3f3;
		cursor: pointer;
	}
</style>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
		GoogleAuthProvider,
    signInWithPopup,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("form") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return;
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      password
    );
    const idToken = await userCredential.user.getIdToken();
    const response = await fetch("/api/auth/signin", {
      method: "GET",
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (response.redirected) {
      window.location.assign(response.url);
    }
  });
	const googleSignin = document.querySelector("#google") as HTMLButtonElement;
  googleSignin.addEventListener("click", async () => {
    const provider = new GoogleAuthProvider();
    const userCredential = await signInWithPopup(auth, provider);
    const idToken = await userCredential.user.getIdToken();
    const res = await fetch("/api/auth/signin", {
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (res.redirected) {
      window.location.assign(res.url);
    }
  });
</script>